import requests
from celery import shared_task
from django.conf import settings

from app_kiberclub.models import Client, AppUser
from django.utils import timezone
import logging
from app_api.alfa_crm_service.crm_service import get_taught_trial_lesson, get_client_lessons
from datetime import datetime, timedelta, date

logger = logging.getLogger(__name__)


@shared_task
def check_clients_lessons_before():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–µ–º, —É –∫–æ–≥–æ –ø—Ä–æ–±–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è –∑–∞–≤—Ç—Ä–∞
    """
    logger.info("–ó–∞–ø—É—â–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–±–Ω—ã—Ö –∏ –ø–µ—Ä–≤—ã—Ö –∑–∞–Ω—è—Ç–∏–π –∫–ª–∏–µ–Ω—Ç–æ–≤...")
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π –º–µ–Ω—å—à–µ 1
    clients = Client.objects.filter(paid_lesson_count__lt=1).prefetch_related('users')
    
    notification_count = 0
    tomorrow_date = (timezone.now() + timezone.timedelta(days=1)).strftime("%Y-%m-%d")

    for client in clients:
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        if not client.crm_id or not client.branch_id:
            continue
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∫–ª–∏–µ–Ω—Ç–æ–º
        users = client.users.all()
        
        if not users.exists():
            continue

        # 1. –ü–†–û–í–ï–†–ö–ê –ü–†–û–ë–ù–´–• –ó–ê–ù–Ø–¢–ò–ô
        try:
            lesson_response = get_client_lessons(
                user_crm_id=client.crm_id, 
                branch_id=client.branch_id, 
                lesson_status=1, 
                lesson_type=3
            )
            
            total_trial_lessons = lesson_response.get("total", 0)
            
            if total_trial_lessons > 0:
                trial_lesson = lesson_response.get("items", [])[0]
                lesson_date = trial_lesson.get("date", None)
                lesson_time = f"{trial_lesson.get('time_from', '').split(' ')[1][:-3]}" if trial_lesson.get('time_from') else "–≤—Ä–µ–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ"
                room_id = trial_lesson.get("room_id", None)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ –∑–∞–≤—Ç—Ä–∞
                if lesson_date == tomorrow_date:
                    # –ü–æ–∏—Å–∫ –ª–æ–∫–∞—Ü–∏–∏
                    location = Location.objects.filter(location_crm_id=room_id).first()
                    
                    if location:
                        message = (
                            f"üîî –í–∞—à–µ –ø—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ –≤ –ö–ò–ë–ï–†-—à–∫–æ–ª–µ —É–∂–µ –∑–∞–≤—Ç—Ä–∞!\n"
                            f"–î–∞—Ç–∞: {lesson_date.split('-')[2]}.{lesson_date.split('-')[1]}\n"
                            f"–í—Ä–µ–º—è: {lesson_time}\n"
                            f"–ê–¥—Ä–µ—Å: {location.name}\n{location.map_url}\n\n"
                            "–í–∞—à KIBERone ‚ô•"
                        )
                        
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
                        for user in users:
                            if not user.telegram_id:
                                continue
                                
                            try:
                                send_telegram_message(user.telegram_id, message)
                                notification_count += 1
                                logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–±–Ω–æ–º –∑–∞–Ω—è—Ç–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.telegram_id}")
                            except Exception as e:
                                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–æ–±–Ω–æ–º –∑–∞–Ω—è—Ç–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.telegram_id}: {e}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–æ–±–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ {client.id}: {e}")

        # 2. –ù–ê–ü–û–ú–ò–ù–ê–ù–ò–ï –û –ü–ï–†–í–û–ú –ó–ê–ù–Ø–¢–ò–ò
        try:
            # –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∏
            lesson_response = get_client_lessons(
                user_crm_id=client.crm_id, 
                branch_id=client.branch_id, 
                lesson_status=1, 
                lesson_type=2
            )
            
            planned_lessons_count = lesson_response.get("total", 0)
            
            if planned_lessons_count > 0:
                # –ü—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã–µ —É—Ä–æ–∫–∏
                user_taught_lessons = get_client_lessons(
                    user_crm_id=client.crm_id, 
                    branch_id=client.branch_id, 
                    lesson_status=3, 
                    lesson_type=2
                )
                
                # –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ—Å–µ—â–µ–Ω–Ω—ã—Ö —É—Ä–æ–∫–æ–≤
                taught_lessons_count = user_taught_lessons.get("total", 0)
                
                if taught_lessons_count == 0:
                    # –ó–∞–±–∏—Ä–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —É—Ä–æ–∫
                    if lesson_response.get('total', 0) > lesson_response.get('count', 0):
                        page = lesson_response.get('total', 0) // lesson_response.get('count', 1)
                    else:
                        page = 0
                    
                    lesson_response = get_client_lessons(
                        user_crm_id=client.crm_id, 
                        branch_id=client.branch_id, 
                        lesson_status=1, 
                        lesson_type=2, 
                        page=page
                    )
                    
                    items = lesson_response.get("items", [])
                    if not items:
                        continue
                        
                    last_user_lesson = items[-1]
                    next_lesson_date = last_user_lesson.get("lesson_date") or last_user_lesson.get("date")
                    
                    room_id = last_user_lesson.get("room_id", None)
                    location = Location.objects.filter(location_crm_id=room_id).first()
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É—Ä–æ–∫ –∑–∞–≤—Ç—Ä–∞
                    if next_lesson_date == tomorrow_date:
                        lesson_time = f"{last_user_lesson.get('time_from', '').split(' ')[1][:-3]}" if last_user_lesson.get('time_from') else "–≤—Ä–µ–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ"
                        
                        message = (
                            f"üîî –í–∞—à–µ –ø–µ—Ä–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ –≤ –ö–ò–ë–ï–†-—à–∫–æ–ª–µ —É–∂–µ –∑–∞–≤—Ç—Ä–∞!\n"
                            f"–î–∞—Ç–∞: {next_lesson_date.split('-')[2]}.{next_lesson_date.split('-')[1]}\n"
                            f"–í—Ä–µ–º—è: {lesson_time}\n"
                            f"–ê–¥—Ä–µ—Å: {location.name if location else '–∞–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω'}\n"
                            f"{location.map_url if location else ''}\n\n"
                            "–í–∞—à KIBERone ‚ô•"
                        )
                        
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
                        for user in users:
                            if not user.telegram_id:
                                continue
                                
                            try:
                                send_telegram_message(user.telegram_id, message)
                                notification_count += 1
                                logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–µ—Ä–≤–æ–º –∑–∞–Ω—è—Ç–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.telegram_id}")
                            except Exception as e:
                                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–µ—Ä–≤–æ–º –∑–∞–Ω—è—Ç–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.telegram_id}: {e}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–µ—Ä–≤—ã—Ö –∑–∞–Ω—è—Ç–∏–π –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ {client.id}: {e}")

    logger.info(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–Ω—è—Ç–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {notification_count}")


@shared_task
def send_birthday_congratulations():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è
    """
    today = date.today()
    logger.info("–ó–∞–ø—É—â–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π...")

    # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è
    clients = Client.objects.filter(
        dob__day=today.day,
        dob__month=today.month,
        dob__isnull=False
    ).prefetch_related('users')
    
    congratulation_count = 0
    
    for client in clients:
        if not client.name:
            continue
            
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –≤–æ–∑—Ä–∞—Å—Ç
        age = None
        if client.dob:
            age = today.year - client.dob.year
            # –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º, –µ—Å–ª–∏ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –µ—â–µ –Ω–µ –Ω–∞—Å—Ç—É–ø–∏–ª –≤ —ç—Ç–æ–º –≥–æ–¥—É
            if today < client.dob.replace(year=today.year):
                age -= 1

        users = client.users.all()
        
        for user in users:
            if not user.telegram_id:
                continue
                
            # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            if age:
                message = (
                    f"üéÇ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –î–Ω–µ–º –†–æ–∂–¥–µ–Ω–∏—è! üéâ\n\n"
                    f"–°–µ–≥–æ–¥–Ω—è {client.name} –∏—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è {age} –ª–µ—Ç!\n\n"
                    f"–ö–æ–º–∞–Ω–¥–∞ KIBERone –∂–µ–ª–∞–µ—Ç —É—Å–ø–µ—Ö–æ–≤ –≤ —É—á–µ–±–µ, –Ω–æ–≤—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∏–π –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π!\n\n"
                    f"–ü—É—Å—Ç—å —ç—Ç–æ—Ç –¥–µ–Ω—å –±—É–¥–µ—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω —Ä–∞–¥–æ—Å—Ç—å—é –∏ —Å—á–∞—Å—Ç—å–µ–º!\n\n"
                    f"–¢–≤–æ–π KIBERone! ‚ù§Ô∏è"
                )
            else:
                message = (
                    f"üéÇ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –î–Ω–µ–º –†–æ–∂–¥–µ–Ω–∏—è, {client.name}! üéâ\n\n"
                    f"–ö–æ–º–∞–Ω–¥–∞ KIBERone –∂–µ–ª–∞–µ—Ç —Ç–µ–±–µ —É—Å–ø–µ—Ö–æ–≤ –≤ —É—á–µ–±–µ, –Ω–æ–≤—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∏–π –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π!\n\n"
                    f"–ü—É—Å—Ç—å —ç—Ç–æ—Ç –¥–µ–Ω—å –±—É–¥–µ—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω —Ä–∞–¥–æ—Å—Ç—å—é –∏ —Å—á–∞—Å—Ç—å–µ–º!\n\n"
                    f"–¢–≤–æ–π KIBERone! ‚ù§Ô∏è"
                )

            try:
                send_telegram_message(user.telegram_id, message)
                congratulation_count += 1
                logger.info(f"–ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.telegram_id} –¥–ª—è {client.name}")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.telegram_id}: {e}")

    logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {congratulation_count} –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è")


@shared_task
def check_clients_balance_and_notify():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–µ–º, —É –∫–æ–≥–æ paid_lesson_count < 1
    –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–∞–∑–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:
    - –¥–æ 10-–≥–æ —á–∏—Å–ª–∞: –æ–±—ã—á–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    - –ø–æ—Å–ª–µ 10-–≥–æ —á–∏—Å–ª–∞: –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –æ–ø–ª–∞—Ç—É
    """
    now = timezone.now()
    logger.info("–ó–∞–ø—É—â–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")

    # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö —É—Ä–æ–∫–æ–≤
    clients = Client.objects.filter(paid_lesson_count__lt=1).prefetch_related('users')

    notification_count = 0
    
    for client in clients:
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        if not client.crm_id or not client.branch_id:
            logger.warning(f"–ö–ª–∏–µ–Ω—Ç {client.id} –Ω–µ –∏–º–µ–µ—Ç crm_id –∏–ª–∏ branch_id")
            continue
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∫–ª–∏–µ–Ω—Ç–æ–º
        users = client.users.all()
        
        if not users.exists():
            logger.info(f"–ö–ª–∏–µ–Ω—Ç {client.id} –Ω–µ –∏–º–µ–µ—Ç —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            continue

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—Ä–æ–∫–∞—Ö –∫–ª–∏–µ–Ω—Ç–∞
        try:
            lesson_response = get_client_lessons(
                user_crm_id=client.crm_id, 
                branch_id=client.branch_id, 
                lesson_status=1, 
                lesson_type=2
            )
            planned_lessons_count = lesson_response.get("total", 0)
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∏, –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞—Ç—É –±–ª–∏–∂–∞–π—à–µ–≥–æ
            if planned_lessons_count > 0:
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —É—Ä–æ–∫–∞
                if lesson_response.get('total', 0) > lesson_response.get('count', 0):
                    page = lesson_response.get('total', 0) // lesson_response.get('count', 1)
                else:
                    page = 0
                
                logger.info(f"page: {page}")
                
                # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —É—Ä–æ–∫–∞–º–∏
                lesson_response = get_client_lessons(
                    user_crm_id=client.crm_id, 
                    branch_id=client.branch_id, 
                    lesson_status=1, 
                    lesson_type=2, 
                    page=page
                )
                
                items = lesson_response.get("items", [])
                if not items:
                    continue
                    
                last_user_lesson = items[-1]
                next_lesson_date = last_user_lesson.get("lesson_date") or last_user_lesson.get("date")
                
                # –ï—Å–ª–∏ —É—Ä–æ–∫ —Å–µ–≥–æ–¥–Ω—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
                if next_lesson_date and timezone.now().strftime("%Y-%m-%d") == next_lesson_date:
                    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
                    message = (
                        f"üîî –≠—Ç–æ PUSH —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–ø–æ–ª–Ω–∏—Ç—å KIBER–∫–∞–∑–Ω—É\n\n"
                        "–ß—Ç–æ–±—ã –æ–ø–ª–∞—Ç–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ KIBERone, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –±–æ–∫–æ–≤—É—é –∫–Ω–æ–ø–∫—É –ú–µ–Ω—é->–ö–ò–ë–ï–†–º–µ–Ω—é->–û–ø–ª–∞—Ç–∏—Ç—å\n\n"
                        "–í–∞—à KIBERone!\n"
                    )
                    
                    reminder_message = (
                        "–£–≤–∞–∂–∞–µ–º—ã–π –∫–ª–∏–µ–Ω—Ç!\n"
                        "–£ –Ω–∞—Å –Ω–µ –æ—Ç–æ–±—Ä–∞–∑–∏–ª–∞—Å—å –≤–∞—à–∞ –æ–ø–ª–∞—Ç–∞ –∑–∞ –∑–∞–Ω—è—Ç–∏—è.\n"
                        "–ß—Ç–æ–±—ã –æ–ø–ª–∞—Ç–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ KIBERone, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –±–æ–∫–æ–≤—É—é –∫–Ω–æ–ø–∫—É –ú–µ–Ω—é->–ö–ò–ë–ï–†–º–µ–Ω—é->–û–ø–ª–∞—Ç–∏—Ç—å\n\n"
                        "–í–∞—à KIBERone!\n"
                    )

                    # –í—ã–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
                    current_day = now.day
                    notification_text = message if current_day <= 10 else reminder_message

                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
                    for user in users:
                        if not user.telegram_id:
                            continue
                            
                        try:
                            send_telegram_message(user.telegram_id, notification_text)
                            notification_count += 1
                            logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.telegram_id} –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ {client.name or '–±–µ–∑ –∏–º–µ–Ω–∏'}")
                        except Exception as e:
                            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.telegram_id}: {e}")
                            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–ª–∏–µ–Ω—Ç–∞ {client.id}: {e}")
            continue

    logger.info(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {notification_count}")


def check_attend_on_lesson(lessons):
    for lesson in lessons:
        details = lesson.get("details") or []
        if not details:
            continue
        lesson_details = details[0]
        is_attend = lesson_details.get("is_attend", False)
        date_str = lesson.get("date")
        if not date_str:
            continue
        if date_str == str(datetime.now().date() - timedelta(1)) and is_attend:
            return True

    return False


def send_telegram_message(chat_id, text):
    token = getattr(settings, "TELEGRAM_BOT_TOKEN", None)
    if not token:
        raise ValueError("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")

    url = f"https://api.telegram.org/bot{token}/sendMessage"
    payload = {
        "chat_id": chat_id,
        "text": text,
        "parse_mode": "HTML"
    }
    try:
        response = requests.post(url, json=payload)
        if not response.ok:
            raise Exception(f"–û—à–∏–±–∫–∞ Telegram API: {response.text}")
    except Exception as e:
        logger.error(e)

    logger.info(f"[Telegram] –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è {chat_id}: {text}")
    pass
